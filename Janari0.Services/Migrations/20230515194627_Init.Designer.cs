// <auto-generated />
using System;
using Janari0.Services.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Janari0.Services.Migrations
{
    [DbContext(typeof(Janari0Context))]
    [Migration("20230515194627_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Janari0.Services.Database.Buyer", b =>
                {
                    b.Property<int>("BuyerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BuyerID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BuyerId"));

                    b.Property<int?>("ProductSaleId")
                        .HasColumnType("int")
                        .HasColumnName("ProductSaleID");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("BuyerId")
                        .HasName("PK__Buyer__4B81C1CA94CF1C1C");

                    b.HasIndex("ProductSaleId");

                    b.HasIndex("UserId");

                    b.ToTable("Buyer", (string)null);
                });

            modelBuilder.Entity("Janari0.Services.Database.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LocationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationId"));

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(18, 15)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(18, 15)");

                    b.HasKey("LocationId")
                        .HasName("PK__Location__E7FEA477CE391E6B");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Janari0.Services.Database.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int?>("BuyerId")
                        .HasColumnType("int")
                        .HasColumnName("BuyerID");

                    b.Property<bool?>("Canceled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("OrderNumber")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<float?>("Price")
                        .HasColumnType("real");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("OrderId")
                        .HasName("PK__Orders__C3905BAFEE4C1F4C");

                    b.HasIndex("BuyerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Janari0.Services.Database.OrderItem", b =>
                {
                    b.Property<int>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OrderItemID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderItemId"));

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    b.Property<int?>("ProductSaleId")
                        .HasColumnType("int")
                        .HasColumnName("ProductSaleID");

                    b.HasKey("OrderItemId")
                        .HasName("PK__OrderIte__57ED06A1F935D222");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductSaleId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("Janari0.Services.Database.Output", b =>
                {
                    b.Property<int>("OutputId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OutputID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OutputId"));

                    b.Property<float?>("Amount")
                        .HasColumnType("real");

                    b.Property<int?>("BuyerId")
                        .HasColumnType("int")
                        .HasColumnName("BuyerID");

                    b.Property<bool?>("Concluded")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("ReceiptNumber")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("OutputId")
                        .HasName("PK__Output__CE760946B23FB18C");

                    b.HasIndex("BuyerId");

                    b.HasIndex("OrderId");

                    b.ToTable("Output", (string)null);
                });

            modelBuilder.Entity("Janari0.Services.Database.OutputItem", b =>
                {
                    b.Property<int>("OutputItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OutputItemID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OutputItemId"));

                    b.Property<int?>("OutputId")
                        .HasColumnType("int")
                        .HasColumnName("OutputID");

                    b.Property<float?>("Price")
                        .HasColumnType("real");

                    b.Property<int?>("ProductSaleId")
                        .HasColumnType("int")
                        .HasColumnName("ProductSaleID");

                    b.Property<int?>("SellerId")
                        .HasColumnType("int")
                        .HasColumnName("SellerID");

                    b.HasKey("OutputItemId")
                        .HasName("PK__OutputIt__29975D19564085A6");

                    b.HasIndex("OutputId");

                    b.HasIndex("ProductSaleId");

                    b.HasIndex("SellerId");

                    b.ToTable("OutputItems");
                });

            modelBuilder.Entity("Janari0.Services.Database.Photo", b =>
                {
                    b.Property<int>("PhotoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PhotoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PhotoId"));

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.HasKey("PhotoId")
                        .HasName("PK__Photos__21B7B5828B3E101A");

                    b.HasIndex("ProductId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("Janari0.Services.Database.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Janari0.Services.Database.ProductsSale", b =>
                {
                    b.Property<int>("ProductSaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductSaleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductSaleId"));

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("LocationId")
                        .HasColumnType("int")
                        .HasColumnName("LocationID");

                    b.Property<string>("Price")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.HasKey("ProductSaleId")
                        .HasName("PK__Products__6723C2D1C83E4825");

                    b.HasIndex("LocationId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductsSale", (string)null);
                });

            modelBuilder.Entity("Janari0.Services.Database.Seller", b =>
                {
                    b.Property<int>("SellerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SellerID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SellerId"));

                    b.Property<string>("PaypalEmail")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("ProductSaleId")
                        .HasColumnType("int")
                        .HasColumnName("ProductSaleID");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("SellerId")
                        .HasName("PK__Seller__7FE3DBA17838C381");

                    b.HasIndex("ProductSaleId");

                    b.HasIndex("UserId");

                    b.ToTable("Seller", (string)null);
                });

            modelBuilder.Entity("Janari0.Services.Database.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int")
                        .HasColumnName("LocationID");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordSalt")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Role")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Uid")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CCAC2EA99370");

                    b.HasIndex("LocationId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Janari0.Services.Database.Buyer", b =>
                {
                    b.HasOne("Janari0.Services.Database.ProductsSale", "ProductSale")
                        .WithMany("Buyers")
                        .HasForeignKey("ProductSaleId")
                        .HasConstraintName("FK_Buyer_ProductsSale");

                    b.HasOne("Janari0.Services.Database.User", "User")
                        .WithMany("Buyers")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Buyer_Users");

                    b.Navigation("ProductSale");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Janari0.Services.Database.Order", b =>
                {
                    b.HasOne("Janari0.Services.Database.Buyer", "Buyer")
                        .WithMany("Orders")
                        .HasForeignKey("BuyerId")
                        .HasConstraintName("FK_Orders_Buyer");

                    b.Navigation("Buyer");
                });

            modelBuilder.Entity("Janari0.Services.Database.OrderItem", b =>
                {
                    b.HasOne("Janari0.Services.Database.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK_OrderItems_Orders");

                    b.HasOne("Janari0.Services.Database.ProductsSale", "ProductSale")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductSaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_OrderItems_ProductsSale");

                    b.Navigation("Order");

                    b.Navigation("ProductSale");
                });

            modelBuilder.Entity("Janari0.Services.Database.Output", b =>
                {
                    b.HasOne("Janari0.Services.Database.Buyer", "Buyer")
                        .WithMany("Outputs")
                        .HasForeignKey("BuyerId")
                        .HasConstraintName("FK_Output_Buyer");

                    b.HasOne("Janari0.Services.Database.Order", "Order")
                        .WithMany("Outputs")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK_Output_Orders");

                    b.Navigation("Buyer");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Janari0.Services.Database.OutputItem", b =>
                {
                    b.HasOne("Janari0.Services.Database.Output", "Output")
                        .WithMany("OutputItems")
                        .HasForeignKey("OutputId")
                        .HasConstraintName("FK_OutputItems_Output");

                    b.HasOne("Janari0.Services.Database.ProductsSale", "ProductSale")
                        .WithMany("OutputItems")
                        .HasForeignKey("ProductSaleId")
                        .HasConstraintName("FK_OutputItems_ProductsSale");

                    b.HasOne("Janari0.Services.Database.Seller", "Seller")
                        .WithMany("OutputItems")
                        .HasForeignKey("SellerId")
                        .HasConstraintName("FK_OutputItems_Seller");

                    b.Navigation("Output");

                    b.Navigation("ProductSale");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("Janari0.Services.Database.Photo", b =>
                {
                    b.HasOne("Janari0.Services.Database.Product", "Product")
                        .WithMany("Photos")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Photos_Products");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Janari0.Services.Database.Product", b =>
                {
                    b.HasOne("Janari0.Services.Database.User", "User")
                        .WithMany("Products")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Products_Users");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Janari0.Services.Database.ProductsSale", b =>
                {
                    b.HasOne("Janari0.Services.Database.Location", "Location")
                        .WithMany("ProductsSales")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProductsSale_Locations");

                    b.HasOne("Janari0.Services.Database.Product", "Product")
                        .WithMany("ProductsSales")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProductsSale_Products");

                    b.Navigation("Location");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Janari0.Services.Database.Seller", b =>
                {
                    b.HasOne("Janari0.Services.Database.ProductsSale", "ProductSale")
                        .WithMany("Sellers")
                        .HasForeignKey("ProductSaleId")
                        .HasConstraintName("FK_Seller_ProductsSale");

                    b.HasOne("Janari0.Services.Database.User", "User")
                        .WithMany("Sellers")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Seller_Users");

                    b.Navigation("ProductSale");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Janari0.Services.Database.User", b =>
                {
                    b.HasOne("Janari0.Services.Database.Location", "Location")
                        .WithMany("Users")
                        .HasForeignKey("LocationId")
                        .HasConstraintName("FK_Users_Locations");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Janari0.Services.Database.Buyer", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Outputs");
                });

            modelBuilder.Entity("Janari0.Services.Database.Location", b =>
                {
                    b.Navigation("ProductsSales");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Janari0.Services.Database.Order", b =>
                {
                    b.Navigation("OrderItems");

                    b.Navigation("Outputs");
                });

            modelBuilder.Entity("Janari0.Services.Database.Output", b =>
                {
                    b.Navigation("OutputItems");
                });

            modelBuilder.Entity("Janari0.Services.Database.Product", b =>
                {
                    b.Navigation("Photos");

                    b.Navigation("ProductsSales");
                });

            modelBuilder.Entity("Janari0.Services.Database.ProductsSale", b =>
                {
                    b.Navigation("Buyers");

                    b.Navigation("OrderItems");

                    b.Navigation("OutputItems");

                    b.Navigation("Sellers");
                });

            modelBuilder.Entity("Janari0.Services.Database.Seller", b =>
                {
                    b.Navigation("OutputItems");
                });

            modelBuilder.Entity("Janari0.Services.Database.User", b =>
                {
                    b.Navigation("Buyers");

                    b.Navigation("Products");

                    b.Navigation("Sellers");
                });
#pragma warning restore 612, 618
        }
    }
}
